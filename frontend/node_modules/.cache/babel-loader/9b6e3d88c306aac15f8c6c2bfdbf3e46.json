{"ast":null,"code":"var _jsxFileName = \"/Users/jamie/Documents/dev/site-react/src/components/Card.jsx\";\nimport React, { useState } from \"react\";\nimport LanguageIcon from \"@material-ui/icons/Language\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\nimport Zoom from '@material-ui/core/Zoom';\n\nfunction Card(props) {\n  const [zoom, setZoom] = useState(false); // For a given portfolio item a combination of links can be included, this\n  // function ensures a corresponding icon is returned, with a catch all \"Link\"\n  // TODO: Move to component????\n\n  function getIcon(linkName) {\n    if (linkName === \"site\") {\n      return /*#__PURE__*/React.createElement(LanguageIcon, {\n        className: \"card-link-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 14\n        }\n      });\n    } else if (linkName === \"demo\") {\n      return /*#__PURE__*/React.createElement(YouTubeIcon, {\n        className: \"card-link-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 14\n        }\n      });\n    } else if (linkName === \"source\") {\n      return /*#__PURE__*/React.createElement(GitHubIcon, {\n        className: \"card-link-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return \"Link\";\n    }\n  }\n\n  function zoomOnHover() {}\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, props.item.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, props.item.content), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-links\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, Object.keys(props.item.links).map((key, index) => {\n    const link = props.item.links[key];\n    const linkName = key;\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"card-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      onMouseOver: zoomOnHover,\n      href: link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, getIcon(linkName)), \" \");\n  })));\n}\n\nexport default Card;","map":{"version":3,"sources":["/Users/jamie/Documents/dev/site-react/src/components/Card.jsx"],"names":["React","useState","LanguageIcon","GitHubIcon","YouTubeIcon","Zoom","Card","props","zoom","setZoom","getIcon","linkName","zoomOnHover","item","title","content","Object","keys","links","map","key","index","link"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC,CADmB,CAGnB;AACA;AACA;;AACA,WAASS,OAAT,CAAiBC,QAAjB,EAA2B;AACzB,QAAIA,QAAQ,KAAK,MAAjB,EAAyB;AACvB,0BAAO,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAC,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEO,IAAIA,QAAQ,KAAK,MAAjB,EAAyB;AAC9B,0BAAO,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFM,MAEA,IAAIA,QAAQ,KAAK,QAAjB,EAA2B;AAChC,0BAAO,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFM,MAEA;AACL,aAAO,MAAP;AACD;AACF;;AAED,WAASC,WAAT,GAAuB,CAEtB;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,KAAK,CAACM,IAAN,CAAWC,KAAhB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,KAAK,CAACM,IAAN,CAAWE,OAAf,CAFF,eAGE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACC,IAAP,CAAYV,KAAK,CAACM,IAAN,CAAWK,KAAvB,EAA8BC,GAA9B,CAAkC,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACjD,UAAMC,IAAI,GAAGf,KAAK,CAACM,IAAN,CAAWK,KAAX,CAAiBE,GAAjB,CAAb;AACA,UAAMT,QAAQ,GAAGS,GAAjB;AAEA,wBACE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,WAAW,EAAER,WAAhB;AAA6B,MAAA,IAAI,EAAEU,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0CZ,OAAO,CAACC,QAAD,CAAjD,CADF,EACmE,GADnE,CADF;AAKD,GATA,CADH,CAHF,CADF;AAkBD;;AACD,eAAeL,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport LanguageIcon from \"@material-ui/icons/Language\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\nimport Zoom from '@material-ui/core/Zoom';\n\n\nfunction Card(props) {\n  const [zoom, setZoom] = useState(false);\n\n  // For a given portfolio item a combination of links can be included, this\n  // function ensures a corresponding icon is returned, with a catch all \"Link\"\n  // TODO: Move to component????\n  function getIcon(linkName) {\n    if (linkName === \"site\") {\n      return <LanguageIcon className=\"card-link-icon\" />;\n    } else if (linkName === \"demo\") {\n      return <YouTubeIcon className=\"card-link-icon\" />;\n    } else if (linkName === \"source\") {\n      return <GitHubIcon className=\"card-link-icon\" />;\n    } else {\n      return \"Link\";\n    }\n  }\n\n  function zoomOnHover() {\n\n  }\n\n  return (\n    <div className=\"card-item\">\n      <h3>{props.item.title}</h3>\n      <p>{props.item.content}</p>\n      <div className=\"card-links\">\n        {Object.keys(props.item.links).map((key, index) => {\n          const link = props.item.links[key];\n          const linkName = key;\n\n          return (\n            <span className=\"card-link\">\n              <a onMouseOver={zoomOnHover} href={link}>{getIcon(linkName)}</a>{\" \"}\n            </span>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}